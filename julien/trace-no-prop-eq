expand-node: query!0 level: 0 depth: 0
true

add-lemma: 0 query!0 false


* LEVEL 1
expand-node: query!0 level: 1 depth: 0
true

expand-node: L2 level: 0 depth: 0
(and (= L2_2_n L2_5_n) (= L2_0_n L2_5_n) (> L2_4_n L2_5_n) (> L2_3_n L2_1_n))

add-lemma: 0 L2 false

expand-node: query!0 level: 1 depth: 0
true

add-lemma: 1 query!0 false


* LEVEL 2
expand-node: query!0 level: 2 depth: 0
true

expand-node: L2 level: 1 depth: 0
(and (= L2_2_n L2_5_n) (= L2_0_n L2_5_n) (> L2_4_n L2_5_n) (> L2_3_n L2_1_n))

expand-node: L1 level: 0 depth: 0
(and (<= L1_4_n L1_5_n)
     (= L1_2_n 0)
     (= L1_0_n 0)
     (> L1_4_n 0)
     (> L1_3_n L1_1_n))

add-lemma: 0 L1 (<= L1_5_n 0)

expand-node: L2 level: 1 depth: 0
(and (= L2_2_n L2_5_n) (= L2_0_n L2_5_n) (> L2_4_n L2_5_n) (> L2_3_n L2_1_n))

add-lemma: 1 L2 (<= L2_4_n L2_5_n)

expand-node: query!0 level: 2 depth: 0
true

add-lemma: 2 query!0 false


* LEVEL 3
expand-node: query!0 level: 3 depth: 0
true

expand-node: L2 level: 2 depth: 0
(and (= L2_2_n L2_5_n) (= L2_0_n L2_5_n) (> L2_4_n L2_5_n) (> L2_3_n L2_1_n))

expand-node: L1 level: 1 depth: 0
(and (<= L1_4_n L1_5_n)
     (= L1_2_n 0)
     (= L1_0_n 0)
     (> L1_4_n 0)
     (> L1_3_n L1_1_n))

;; AG: First difference. Need to see the proof with equality propagation
add-lemma: 1 L1
(or (< L1_0_n 0)
    (<= L1_5_n L1_0_n)
    (< L1_2_n L1_0_n)
    (< L1_0_n L1_2_n)
    (<= L1_3_n L1_1_n)
    )

expand-node: L2 level: 2 depth: 0
(and (= L2_2_n L2_5_n) (= L2_0_n L2_5_n) (> L2_4_n L2_5_n) (> L2_3_n L2_1_n))

;; AG: Second difference. Need to see the proof with equality propagation
add-lemma: 2 L2
(or (<= L2_3_n L2_1_n)
    (< L2_0_n L2_5_n)
    (<= L2_4_n L2_0_n)
    (< L2_0_n L2_2_n)
    (< L2_2_n L2_0_n))

expand-node: query!0 level: 3 depth: 0
true

expand-node: L2 level: 2 depth: 0
(and (= L2_2_n L2_5_n) (= L2_0_n L2_5_n) (> L2_4_n L2_5_n) (> L2_1_n L2_3_n))

expand-node: L1 level: 1 depth: 0
(and (<= L1_4_n L1_5_n)
     (= L1_2_n 0)
     (= L1_0_n 0)
     (> L1_4_n 0)
     (> L1_1_n L1_3_n))

add-lemma: 1 L1 (or (<= L1_5_n L1_0_n)
    (< L1_0_n L1_2_n)
    (< L1_2_n L1_0_n)
    (< L1_0_n 0)
    (<= L1_1_n L1_3_n))

expand-node: L2 level: 2 depth: 0
(and (= L2_2_n L2_5_n) (= L2_0_n L2_5_n) (> L2_4_n L2_5_n) (> L2_1_n L2_3_n))

add-lemma: 2 L2 (or (< L2_0_n L2_5_n)
    (<= L2_4_n L2_0_n)
    (< L2_0_n L2_2_n)
    (< L2_2_n L2_0_n)
    (<= L2_1_n L2_3_n))

expand-node: query!0 level: 3 depth: 0
true

add-lemma: 3 query!0 false

add-lemma: 2 L1 (or (<= L1_5_n L1_0_n)
    (< L1_0_n L1_2_n)
    (< L1_2_n L1_0_n)
    (< L1_0_n 0)
    (<= L1_1_n L1_3_n))

add-lemma: 2 L1 (or (<= L1_3_n L1_1_n)
    (<= L1_5_n L1_0_n)
    (< L1_0_n L1_2_n)
    (< L1_2_n L1_0_n)
    (< L1_0_n 0))

add-lemma: 3 L2 (or (<= L2_3_n L2_1_n)
    (< L2_0_n L2_5_n)
    (<= L2_4_n L2_0_n)
    (< L2_0_n L2_2_n)
    (< L2_2_n L2_0_n))

add-lemma: 3 L2 (or (< L2_0_n L2_5_n)
    (<= L2_4_n L2_0_n)
    (< L2_0_n L2_2_n)
    (< L2_2_n L2_0_n)
    (<= L2_1_n L2_3_n))

add-lemma: 3 L1 (or (<= L1_5_n L1_0_n)
    (< L1_0_n L1_2_n)
    (< L1_2_n L1_0_n)
    (< L1_0_n 0)
    (<= L1_1_n L1_3_n))

add-lemma: 3 L1 (or (<= L1_3_n L1_1_n)
    (<= L1_5_n L1_0_n)
    (< L1_0_n L1_2_n)
    (< L1_2_n L1_0_n)
    (< L1_0_n 0))

add-lemma: oo query!0 false

add-lemma: oo L2 (or (<= L2_3_n L2_1_n)
    (< L2_0_n L2_5_n)
    (<= L2_4_n L2_0_n)
    (< L2_0_n L2_2_n)
    (< L2_2_n L2_0_n))

add-lemma: oo L2 (or (< L2_0_n L2_5_n)
    (<= L2_4_n L2_0_n)
    (< L2_0_n L2_2_n)
    (< L2_2_n L2_0_n)
    (<= L2_1_n L2_3_n))

add-lemma: oo L1 (or (<= L1_5_n L1_0_n)
    (< L1_0_n L1_2_n)
    (< L1_2_n L1_0_n)
    (< L1_0_n 0)
    (<= L1_1_n L1_3_n))

add-lemma: oo L1 (or (<= L1_3_n L1_1_n)
    (<= L1_5_n L1_0_n)
    (< L1_0_n L1_2_n)
    (< L1_2_n L1_0_n)
    (< L1_0_n 0))

