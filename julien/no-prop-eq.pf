expand-node: L1 level: 1 depth: 0
(let ((a!1 (not (<= (+ L1_3_n (* (- 1) L1_1_n)) 0))))
  (and (not (<= L1_4_n 0))
       a!1
       (= L1_2_n 0)
       (<= (+ L1_4_n (* (- 1) L1_5_n)) 0)
       (= L1_0_n 0)))
-------- [spacer_verbose] get_lemmas ../src/muz/spacer/spacer_farkas_learner.cpp:195 ---------
(let ((a!1 (not (<= (+ L1_3_n (* (- 1) L1_1_n)) 0)))
      (a!4 (symm (hypothesis (= (select aux!32_n L1_2_n)
                                (select aux!30_n L1_2_n)))
                 (= (select aux!30_n L1_2_n) (select aux!32_n L1_2_n))))
      (a!6 (monotonicity (symm (hypothesis (= L1_2_0 L1_2_n)) (= L1_2_n L1_2_0))
                         (= (select aux!32_n L1_2_n) (select aux!32_n L1_2_0))))
      (a!7 (ite (= L1_0_n L1_2_0)
                (select aux!32_n L1_2_0)
                (select aux!31_n L1_0_n)))
      (a!10 (symm (hypothesis (= L1_1_n (select aux!29_n L1_0_n)))
                  (= (select aux!29_n L1_0_n) L1_1_n)))
      (a!13 (not (= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!16 (= (select (store aux!31_n L1_2_0 (select aux!32_n L1_2_0)) L1_0_n)
               (select aux!29_n L1_0_n)))
      (a!20 (= (= L1_5_n (+ 1 L1_2_0)) (= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!21 (= (<= L1_4_n L1_2_0) (>= (+ L1_2_0 (* (- 1) L1_4_n)) 0)))
      (a!22 (not (>= (+ L1_2_0 (* (- 1) L1_4_n)) 0)))
      (a!28 (and (= L1_5_n 0)
                 (= (select aux!26_n L1_2_n) (select aux!24_n L1_2_n))
                 (= (select aux!28_n L1_0_n) (select aux!25_n L1_0_n))
                 (= (select aux!27_n L1_2_n) (select aux!26_n L1_2_n))
                 (= (select aux!25_n L1_0_n) (select aux!23_n L1_0_n))
                 (= L1_1_n (select aux!23_n L1_0_n))
                 (= L1_3_n (select aux!24_n L1_2_n))))
      (a!29 (or (not (= L1_5_n 0))
                (not (= (select aux!26_n L1_2_n) (select aux!24_n L1_2_n)))
                (not (= (select aux!28_n L1_0_n) (select aux!25_n L1_0_n)))
                (not (= (select aux!27_n L1_2_n) (select aux!26_n L1_2_n)))
                (not (= (select aux!25_n L1_0_n) (select aux!23_n L1_0_n)))
                (not (= L1_1_n (select aux!23_n L1_0_n)))
                (not (= L1_3_n (select aux!24_n L1_2_n)))))
      (a!32 (asserted (or (not spacer_proxy!5) (not (<= L1_4_n 0)))))
      (a!33 (or (not spacer_proxy!6) (<= (+ L1_4_n (* (- 1) L1_5_n)) 0)))
      (a!43 (hypothesis (>= (+ L1_2_0 (* (- 1) L1_0_n)) 0)))
      (a!44 (hypothesis (<= (+ L1_2_0 (* (- 1) L1_0_n)) 0)))
      (a!46 (not (>= (+ L1_2_0 (* (- 1) L1_0_n)) 0)))
      (a!47 (not (<= (+ L1_2_0 (* (- 1) L1_0_n)) 0)))
      (a!48 (unit-resolution (asserted (or (not spacer_proxy!0) (<= L1_0_n 0)))
                             (asserted spacer_proxy!0)
                             (<= L1_0_n 0)))
      (a!49 (hypothesis (>= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!51 (not (>= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!57 (unit-resolution (asserted (or (not spacer_proxy!1) (>= L1_0_n 0)))
                             (asserted spacer_proxy!1)
                             (>= L1_0_n 0)))
      (a!58 (hypothesis (<= (+ L1_2_0 (* (- 1) L1_5_0)) 0)))
      (a!59 (not (<= (+ L1_2_0 (* (- 1) L1_5_0)) 0)))
      (a!62 (asserted (or (=> L1_tr1 (<= L1_5_0 0)) |L1#level_1!112|)))
      (a!63 (rewrite (= (=> L1_tr1 (<= L1_5_0 0))
                        (or (not L1_tr1) (<= L1_5_0 0)))))
      (a!64 (= (or (=> L1_tr1 (<= L1_5_0 0)) |L1#level_1!112|)
               (or (or (not L1_tr1) (<= L1_5_0 0)) |L1#level_1!112|)))
      (a!65 (= (or (or (not L1_tr1) (<= L1_5_0 0)) |L1#level_1!112|)
               (or (not L1_tr1) (<= L1_5_0 0) |L1#level_1!112|)))
      (a!66 (= (or (=> L1_tr1 (<= L1_5_0 0)) |L1#level_1!112|)
               (or (not L1_tr1) (<= L1_5_0 0) |L1#level_1!112|)))
      (a!74 (unit-resolution (asserted (or (not spacer_proxy!4) (>= L1_2_n 0)))
                             (asserted spacer_proxy!4)
                             (>= L1_2_n 0)))
      (a!75 (not (<= (+ L1_2_0 (* (- 1) L1_2_n)) 0)))
      (a!78 (unit-resolution (asserted (or (not spacer_proxy!3) (<= L1_2_n 0)))
                             (asserted spacer_proxy!3)
                             (<= L1_2_n 0)))
      (a!79 (not (>= (+ L1_2_0 (* (- 1) L1_2_n)) 0))))
(let ((a!2 (unit-resolution (asserted (or (not spacer_proxy!2) a!1))
                            (asserted spacer_proxy!2)
                            a!1))
      (a!5 (trans (hypothesis (= L1_3_n (select aux!30_n L1_2_n)))
                  a!4
                  (= L1_3_n (select aux!32_n L1_2_n))))
      (a!11 (or (not (= L1_2_0 L1_2_n))
                (not (= L1_1_n (select aux!29_n L1_0_n)))
                (not (= L1_3_n (select aux!30_n L1_2_n)))
                (not (= (select aux!32_n L1_2_n) (select aux!30_n L1_2_n)))
                (not (= (select aux!32_n L1_2_0) a!7))
                (not (= a!7 (select aux!29_n L1_0_n)))))
      (a!14 (or (not (= L1_0_0 L1_0_n))
                (not (= L1_4_0 L1_4_n))
                (not (= L1_5_0 L1_2_0))
                (not (= L1_0_1 L1_0_n))
                (not (= L1_2_1 L1_2_n))
                (not (= L1_4_1 L1_4_n))
                (not (= L1_5_1 L1_2_0))
                (not (= a!7 (select aux!29_n L1_0_n)))
                (not (= (select aux!34_n L1_0_n) (select aux!31_n L1_0_n)))
                (not (= (select aux!36_n L1_0_n) (select aux!31_n L1_0_n)))
                (not (= (select aux!35_n L1_2_n) (select aux!32_n L1_2_n)))
                (not (= (select aux!33_n L1_2_0) (select aux!32_n L1_2_0)))
                (not (= (select aux!32_n L1_2_n) (select aux!30_n L1_2_n)))
                (not (= L1_3_1 (select aux!35_n L1_2_n)))
                (not (= L1_1_1 (select aux!36_n L1_0_n)))
                (not (= L1_3_0 (select aux!33_n L1_2_0)))
                a!13
                (not (= L1_1_n (select aux!29_n L1_0_n)))
                (not (= L1_1_0 (select aux!34_n L1_0_n)))
                (not (= L1_3_n (select aux!30_n L1_2_n)))
                (>= (+ L1_2_0 (* (- 1) L1_4_n)) 0)))
      (a!17 (and (= L1_0_0 L1_0_n)
                 (= L1_4_0 L1_4_n)
                 (= L1_5_0 L1_2_0)
                 (= L1_0_1 L1_0_n)
                 (= L1_2_1 L1_2_n)
                 (= L1_4_1 L1_4_n)
                 (= L1_5_1 L1_2_0)
                 a!16
                 (= (select aux!34_n L1_0_n) (select aux!31_n L1_0_n))
                 (= (select aux!36_n L1_0_n) (select aux!31_n L1_0_n))
                 (= (select aux!35_n L1_2_n) (select aux!32_n L1_2_n))
                 (= (select aux!33_n L1_2_0) (select aux!32_n L1_2_0))
                 (= (select aux!32_n L1_2_n) (select aux!30_n L1_2_n))
                 (= L1_3_1 (select aux!35_n L1_2_n))
                 (= L1_1_1 (select aux!36_n L1_0_n))
                 (= L1_3_0 (select aux!33_n L1_2_0))
                 (= L1_5_n (+ 1 L1_2_0))
                 (= L1_1_n (select aux!29_n L1_0_n))
                 (= L1_1_0 (select aux!34_n L1_0_n))
                 (= L1_3_n (select aux!30_n L1_2_n))
                 (not (<= L1_4_n L1_2_0))))
      (a!18 (= (select (store aux!31_n L1_2_0 (select aux!32_n L1_2_0)) L1_0_n)
               a!7))
      (a!23 (monotonicity (rewrite a!21) (= (not (<= L1_4_n L1_2_0)) a!22)))
      (a!24 (and (= L1_0_0 L1_0_n)
                 (= L1_4_0 L1_4_n)
                 (= L1_5_0 L1_2_0)
                 (= L1_0_1 L1_0_n)
                 (= L1_2_1 L1_2_n)
                 (= L1_4_1 L1_4_n)
                 (= L1_5_1 L1_2_0)
                 (= a!7 (select aux!29_n L1_0_n))
                 (= (select aux!34_n L1_0_n) (select aux!31_n L1_0_n))
                 (= (select aux!36_n L1_0_n) (select aux!31_n L1_0_n))
                 (= (select aux!35_n L1_2_n) (select aux!32_n L1_2_n))
                 (= (select aux!33_n L1_2_0) (select aux!32_n L1_2_0))
                 (= (select aux!32_n L1_2_n) (select aux!30_n L1_2_n))
                 (= L1_3_1 (select aux!35_n L1_2_n))
                 (= L1_1_1 (select aux!36_n L1_0_n))
                 (= L1_3_0 (select aux!33_n L1_2_0))
                 (= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))
                 (= L1_1_n (select aux!29_n L1_0_n))
                 (= L1_1_0 (select aux!34_n L1_0_n))
                 (= L1_3_n (select aux!30_n L1_2_n))
                 a!22))
      (a!30 (monotonicity (rewrite (= a!28 (not a!29)))
                          (= (or (not L1_tr0) a!28)
                             (or (not L1_tr0) (not a!29)))))
      (a!34 (unit-resolution (asserted a!33)
                             (asserted spacer_proxy!6)
                             (<= (+ L1_4_n (* (- 1) L1_5_n)) 0)))
      (a!42 (def-axiom (or (not (= L1_0_n L1_2_0))
                           (= (select aux!32_n L1_2_0) a!7))))
      (a!45 (unit-resolution (hypothesis (not (= L1_0_n L1_2_0)))
                             (symm (th-lemma a!43 a!44 (= L1_2_0 L1_0_n))
                                   (= L1_0_n L1_2_0))
                             false))
      (a!52 (or (>= (+ L1_2_0 (* (- 1) L1_0_n)) 0) a!51))
      (a!60 (or (<= (+ L1_2_0 (* (- 1) L1_0_n)) 0) (not (<= L1_5_0 0)) a!59))
      (a!76 (or (<= (+ L1_2_0 (* (- 1) L1_2_n)) 0) a!47))
      (a!80 (or (>= (+ L1_2_0 (* (- 1) L1_2_n)) 0) a!46)))
(let ((a!3 (lemma (th-lemma a!2 (hypothesis (= L1_3_n L1_1_n)) false)
                  (not (= L1_3_n L1_1_n))))
      (a!8 (trans (trans a!5 a!6 (= L1_3_n (select aux!32_n L1_2_0)))
                  (hypothesis (= (select aux!32_n L1_2_0) a!7))
                  (= L1_3_n a!7)))
      (a!15 (def-axiom (or a!14 (= L1_1_n (select aux!29_n L1_0_n)))))
      (a!19 (monotonicity (rewrite a!18)
                          (= a!16 (= a!7 (select aux!29_n L1_0_n)))))
      (a!27 (monotonicity (rewrite (= a!24 (not a!14)))
                          (= (or (not L1_tr1) a!24)
                             (or (not L1_tr1) (not a!14)))))
      (a!31 (mp (asserted (or (not L1_tr0) a!28))
                a!30
                (or (not L1_tr0) (not a!29))))
      (a!35 (th-lemma (unit-resolution a!32
                                       (asserted spacer_proxy!5)
                                       (not (<= L1_4_n 0)))
                      a!34
                      (hypothesis (<= L1_5_n 0))
                      false))
      (a!40 (def-axiom (or a!14 (= L1_3_n (select aux!30_n L1_2_n)))))
      (a!41 (def-axiom (or a!14
                           (= (select aux!32_n L1_2_n) (select aux!30_n L1_2_n)))))
      (a!50 (th-lemma a!48
                      a!49
                      (unit-resolution a!32
                                       (asserted spacer_proxy!5)
                                       (not (<= L1_4_n 0)))
                      a!34
                      (hypothesis a!46)
                      false))
      (a!53 (or a!14 (= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!61 (lemma (th-lemma (hypothesis (<= L1_5_0 0))
                             a!57
                             (hypothesis a!47)
                             a!58
                             false)
                   a!60))
      (a!72 (def-axiom (or a!14 (= a!7 (select aux!29_n L1_0_n))))))
(let ((a!9 (trans a!8
                  (hypothesis (= a!7 (select aux!29_n L1_0_n)))
                  (= L1_3_n (select aux!29_n L1_0_n))))
      (a!25 (monotonicity (monotonicity a!19 (rewrite a!20) a!23 (= a!17 a!24))
                          (= (or (not L1_tr1) a!17) (or (not L1_tr1) a!24))))
      (a!36 (th-lemma (hypothesis (= L1_5_n 0))
                      (lemma a!35 (not (<= L1_5_n 0)))
                      false)))
(let ((a!12 (lemma (unit-resolution a!3
                                    (trans a!9 a!10 (= L1_3_n L1_1_n))
                                    false)
                   a!11))
      (a!26 (mp (asserted (or (not L1_tr1) a!17)) a!25 (or (not L1_tr1) a!24)))
      (a!37 (unit-resolution (def-axiom (or a!29 (= L1_5_n 0)))
                             (lemma a!36 (not (= L1_5_n 0)))
                             a!29)))
(let ((a!38 (unit-resolution (asserted (or L1_ext0_n L1_tr0 L1_tr1))
                             (unit-resolution a!31 a!37 (not L1_tr0))
                             (asserted (not L1_ext0_n))
                             L1_tr1)))
(let ((a!39 (unit-resolution (mp a!26 a!27 (or (not L1_tr1) (not a!14)))
                             a!38
                             (not a!14)))
      (a!67 (unit-resolution (mp a!62
                                 (trans (monotonicity a!63 a!64)
                                        (rewrite a!65)
                                        a!66)
                                 (or (not L1_tr1)
                                     (<= L1_5_0 0)
                                     |L1#level_1!112|))
                             a!38
                             (asserted (not |L1#level_1!112|))
                             (<= L1_5_0 0))))
(let ((a!54 (unit-resolution (def-axiom a!53)
                             a!39
                             (= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!68 (unit-resolution (def-axiom (or a!14 (= L1_5_0 L1_2_0)))
                             a!39
                             (= L1_5_0 L1_2_0))))
(let ((a!55 (th-lemma a!54 (>= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!69 (th-lemma (symm a!68 (= L1_2_0 L1_5_0))
                      (<= (+ L1_2_0 (* (- 1) L1_5_0)) 0))))
(let ((a!56 (unit-resolution (lemma a!50 a!52)
                             a!55
                             (>= (+ L1_2_0 (* (- 1) L1_0_n)) 0)))
      (a!70 (unit-resolution a!61 a!67 a!69 (<= (+ L1_2_0 (* (- 1) L1_0_n)) 0))))
(let ((a!71 (unit-resolution (lemma a!45 (or (= L1_0_n L1_2_0) a!46 a!47))
                             a!56
                             a!70
                             (= L1_0_n L1_2_0)))
      (a!77 (unit-resolution (lemma (th-lemma a!74
                                              a!48
                                              a!44
                                              (hypothesis a!75)
                                              false)
                                    a!76)
                             a!70
                             (<= (+ L1_2_0 (* (- 1) L1_2_n)) 0)))
      (a!81 (unit-resolution (lemma (th-lemma a!78
                                              a!57
                                              a!43
                                              (hypothesis a!79)
                                              false)
                                    a!80)
                             a!56
                             (>= (+ L1_2_0 (* (- 1) L1_2_n)) 0))))
(let ((a!73 (unit-resolution a!12
                             (unit-resolution a!15
                                              a!39
                                              (= L1_1_n
                                                 (select aux!29_n L1_0_n)))
                             (unit-resolution a!40
                                              a!39
                                              (= L1_3_n
                                                 (select aux!30_n L1_2_n)))
                             (unit-resolution a!41
                                              a!39
                                              (= (select aux!32_n L1_2_n)
                                                 (select aux!30_n L1_2_n)))
                             (unit-resolution a!42
                                              a!71
                                              (= (select aux!32_n L1_2_0) a!7))
                             (unit-resolution a!72
                                              a!39
                                              (= a!7 (select aux!29_n L1_0_n)))
                             (not (= L1_2_0 L1_2_n)))))
  (th-lemma a!73 a!77 a!81 false)))))))))))))
------------------------------------------------
-------- [spacer] is_reachable ../src/muz/spacer/spacer_context.cpp:819 ---------
------------------------------------------------
-------- [spacer] is_reachable ../src/muz/spacer/spacer_context.cpp:843 ---------
unreachable with lemmas
Core:
(not (<= (+ L1_3_n (* (- 1) L1_1_n)) 0))
(not (<= L1_5_n 0))
(not (<= (+ L1_5_n (* (- 1) L1_0_n)) 0))
(not (<= (+ L1_0_n (* (- 1) L1_2_n)) (- 1)))
(not (<= L1_0_n (- 1)))
(not (<= (+ L1_2_n (* (- 1) L1_0_n)) (- 1)))
