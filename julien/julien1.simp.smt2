;; Slighlty simplified version of the example.
;; This particular version is solved both with 
;; eq_prop=true and eq_prop=false. However, with 
;; eq_prop=false the right lemmas are found singificantly faster.
;; See the logs for additional comments

;; NOTE: using OLD interpolation code. Had to hardcode the choice 
;; in the binary. Have not tried with NEW interpolation code. NEW code 
;; did not work for the non-simplified example, but I have not tried 
;; it here.

;; /ag/z3/quic/debug/z3 -v:1 -st fixedpoint.print_statistics=true fixedpoint.xform.slice=false fixedpoint.xform.inline_linear=true fixedpoint.xform.inline_eager=true fixedpoint.xform.tail_simplifier_pve=false fixedpoint.engine=spacer  fixedpoint.pdr.validate_result=true fixedpoint.spacer.eq_prop=false  julien1.simp.smt2 -tr:spacer.expand-add 2>&1 | tee /tmp/out.log
;; 
(set-logic HORN)
(declare-rel assign_15_1_75 (Int Int Int Int Int Int ))
(declare-rel L2 (Int Int Int Int Int Int ))
(declare-rel start (Int Int Int Int Int Int ))
(declare-rel assert_17_5_101 (Int Int Int Int Int Int ))
(declare-rel assign_18_5_110 (Int Int Int Int Int Int ))
(declare-rel assign_12_5_66 (Int Int Int Int Int Int ))
(declare-rel query!0 (Int Int Int Int Int Int ))
(declare-rel assign_9_1_35 (Int Int Int Int Int Int ))
(declare-rel L1 (Int Int Int Int Int Int ))
(declare-rel arrayassign_11_5_57 (Int Int Int Int Int Int ))
; assign_9_1_35 -> start

; assign_12_5_66 -> arrayassign_11_5_57
; L1 -> assign_9_1_35
; L1 -> assign_12_5_66
; arrayassign_11_5_57 -> L1

; assign_15_1_75 -> L1

; L2 -> assign_15_1_75
; L2 -> assign_18_5_110
; assert_17_5_101 -> L2
; assign_18_5_110 -> assert_17_5_101

; query!0 -> assert_17_5_101


(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E (Array Int Int))
         (F (Array Int Int))
         (G Int)
         (H Int))
  (=> (and (= B (select E D)) (= A (select F C))) (start D B C A G H))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I (Array Int Int))
         (J (Array Int Int)))
  (=> (and (start F B E A H G)
           (= B (select J F))
           (= C (select I E))
           (= D (select J F))
           (= A (select I E)))
      (assign_9_1_35 F D E C H G))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I (Array Int Int))
         (J (Array Int Int)))
  (=> (and (assign_9_1_35 F B E A H G)
           (= B (select J F))
           (= C (select I E))
           (= D (select J F))
           (= A (select I E)))
      (L1 F D E C H 0))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G (Array Int Int))
         (H (Array Int Int))
         (I Int)
         (J Int))
  (=> (and (L1 F B E A I J)
           (= B (select G F))
           (= C (select H E))
           (= D (select G F))
           (not (<= I J))
           (= A (select H E)))
      (arrayassign_11_5_57 F D E C I J))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G (Array Int Int))
         (H (Array Int Int))
         (I Int)
         (J Int))
  (=> (and (L1 F B E A I J)
           (= B (select G F))
           (= C (select H E))
           (= D (select G F))
           (<= I J)
           (= A (select H E)))
      (assign_15_1_75 F D E C I J))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I (Array Int Int))
         (J Int)
         (K Int)
         (L (Array Int Int))
         (M (Array Int Int)))
  (let ((a!1 (and (arrayassign_11_5_57 H D J C K J)
                  (arrayassign_11_5_57 H B G A K J)
                  (= A (select L G))
                  (= B (select M H))
                  (= C (select L J))
                  (= D (select M H))
                  (= E (select L G))
                  (= F (select I H))
                  (= I (store M J (select L J))))))
    (=> a!1 (assign_12_5_66 H F G E K J)))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J (Array Int Int))
         (K (Array Int Int)))
  (=> (and (assign_12_5_66 F B E A I H)
           (= B (select K F))
           (= C (select J E))
           (= D (select K F))
           (= G (+ 1 H))
           (= A (select J E)))
      (L1 F D E C I G))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I (Array Int Int))
         (J (Array Int Int)))
  (=> (and (assign_15_1_75 F B E A H G)
           (= B (select J F))
           (= C (select I E))
           (= D (select J F))
           (= A (select I E)))
      (L2 F D E C H 0))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G (Array Int Int))
         (H (Array Int Int))
         (I Int)
         (J Int))
  (=> (and (L2 F B E A I J)
           (= B (select G F))
           (= C (select H E))
           (= D (select G F))
           (not (<= I J))
           (= A (select H E)))
      (assert_17_5_101 F D E C I J))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I (Array Int Int))
         (J (Array Int Int)))
  (=> (and (assert_17_5_101 F B E A H G)
           (= B (select J F))
           (= C (select I E))
           (= D (select J F))
           (= A (select I E)))
      (assign_18_5_110 F D E C H G))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J (Array Int Int))
         (K (Array Int Int)))
  (=> (and (assign_18_5_110 F B E A I H)
           (= B (select K F))
           (= C (select J E))
           (= D (select K F))
           (= G (+ 1 H))
           (= A (select J E)))
      (L2 F D E C I G))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O (Array Int Int))
         (P (Array Int Int)))
  (let ((a!1 (and (assert_17_5_101 M H M G N M)
                  (assert_17_5_101 K F L E N M)
                  (assert_17_5_101 K D M C N M)
                  (assert_17_5_101 M B L A N M)
                  (= A (select O L))
                  (= B (select P M))
                  (= C (select O M))
                  (= D (select P K))
                  (= E (select O L))
                  (= F (select P K))
                  (= G (select O M))
                  (= H (select P M))
                  (= I (select P K))
                  (= J (select O L))
                  (not (= (select O M) (select P M))))))
    (=> a!1 (query!0 M N L J K I)))))

(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)) (=> (query!0 A B C D E F) false))) 

(check-sat)
