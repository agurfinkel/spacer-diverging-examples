expand-node: L1 level: 1 depth: 0
(let ((a!1 (not (<= (+ L1_3_n (* (- 1) L1_1_n)) 0))))
  (and (<= (+ L1_4_n (* (- 1) L1_5_n)) 0)
       (= L1_2_n 0)
       (= L1_0_n 0)
       (not (<= L1_4_n 0))
       a!1))
-------- [spacer_verbose] get_lemmas ../src/muz/spacer/spacer_farkas_learner.cpp:195 ---------
(let ((a!1 (not (<= (+ L1_3_n (* (- 1) L1_1_n)) 0)))
      (a!3 (ite (= L1_0_n L1_2_0)
                (select aux!32_n L1_2_0)
                (select aux!31_n L1_0_n)))
      (a!4 (not (= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!7 (= (select (store aux!31_n L1_2_0 (select aux!32_n L1_2_0)) L1_0_n)
              (select aux!29_n L1_0_n)))
      (a!11 (= (= L1_5_n (+ 1 L1_2_0)) (= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!12 (= (<= L1_4_n L1_2_0) (>= (+ L1_2_0 (* (- 1) L1_4_n)) 0)))
      (a!13 (not (>= (+ L1_2_0 (* (- 1) L1_4_n)) 0)))
      (a!19 (and (= L1_5_n 0)
                 (= (select aux!26_n L1_2_n) (select aux!24_n L1_2_n))
                 (= (select aux!28_n L1_0_n) (select aux!25_n L1_0_n))
                 (= (select aux!27_n L1_2_n) (select aux!26_n L1_2_n))
                 (= (select aux!25_n L1_0_n) (select aux!23_n L1_0_n))
                 (= L1_1_n (select aux!23_n L1_0_n))
                 (= L1_3_n (select aux!24_n L1_2_n))))
      (a!20 (or (not (= L1_5_n 0))
                (not (= (select aux!26_n L1_2_n) (select aux!24_n L1_2_n)))
                (not (= (select aux!28_n L1_0_n) (select aux!25_n L1_0_n)))
                (not (= (select aux!27_n L1_2_n) (select aux!26_n L1_2_n)))
                (not (= (select aux!25_n L1_0_n) (select aux!23_n L1_0_n)))
                (not (= L1_1_n (select aux!23_n L1_0_n)))
                (not (= L1_3_n (select aux!24_n L1_2_n)))))
      (a!23 (asserted (or (not spacer_proxy!4) (not (<= L1_4_n 0)))))
      (a!24 (or (not spacer_proxy!1) (<= (+ L1_4_n (* (- 1) L1_5_n)) 0)))
      (a!35 (asserted (or (=> L1_tr1 (<= L1_5_1 0)) |L1#level_1!112|)))
      (a!36 (rewrite (= (=> L1_tr1 (<= L1_5_1 0))
                        (or (not L1_tr1) (<= L1_5_1 0)))))
      (a!37 (= (or (=> L1_tr1 (<= L1_5_1 0)) |L1#level_1!112|)
               (or (or (not L1_tr1) (<= L1_5_1 0)) |L1#level_1!112|)))
      (a!38 (= (or (or (not L1_tr1) (<= L1_5_1 0)) |L1#level_1!112|)
               (or (not L1_tr1) (<= L1_5_1 0) |L1#level_1!112|)))
      (a!39 (= (or (=> L1_tr1 (<= L1_5_1 0)) |L1#level_1!112|)
               (or (not L1_tr1) (<= L1_5_1 0) |L1#level_1!112|)))
      (a!47 (unit-resolution (asserted (or (not spacer_proxy!3) (>= L1_2_n 0)))
                             (asserted spacer_proxy!3)
                             (>= L1_2_n 0)))
      (a!48 (unit-resolution (asserted (or (not spacer_proxy!2) (<= L1_2_n 0)))
                             (asserted spacer_proxy!2)
                             (<= L1_2_n 0)))
      (a!52 (unit-resolution (asserted (or (not spacer_proxy!6) (>= L1_0_n 0)))
                             (asserted spacer_proxy!6)
                             (>= L1_0_n 0)))
      (a!53 (unit-resolution (asserted (or (not spacer_proxy!5) (<= L1_0_n 0)))
                             (asserted spacer_proxy!5)
                             (<= L1_0_n 0))))
(let ((a!2 (unit-resolution (asserted (or (not spacer_proxy!0) a!1))
                            (asserted spacer_proxy!0)
                            a!1))
      (a!5 (or (not (= L1_0_0 L1_0_n))
               (not (= L1_4_0 L1_4_n))
               (not (= L1_5_0 L1_2_0))
               (not (= L1_0_1 L1_0_n))
               (not (= L1_2_1 L1_2_n))
               (not (= L1_4_1 L1_4_n))
               (not (= L1_5_1 L1_2_0))
               (not (= a!3 (select aux!29_n L1_0_n)))
               (not (= (select aux!34_n L1_0_n) (select aux!31_n L1_0_n)))
               (not (= (select aux!36_n L1_0_n) (select aux!31_n L1_0_n)))
               (not (= (select aux!35_n L1_2_n) (select aux!32_n L1_2_n)))
               (not (= (select aux!33_n L1_2_0) (select aux!32_n L1_2_0)))
               (not (= (select aux!32_n L1_2_n) (select aux!30_n L1_2_n)))
               (not (= L1_3_1 (select aux!35_n L1_2_n)))
               (not (= L1_1_1 (select aux!36_n L1_0_n)))
               (not (= L1_3_0 (select aux!33_n L1_2_0)))
               a!4
               (not (= L1_1_n (select aux!29_n L1_0_n)))
               (not (= L1_1_0 (select aux!34_n L1_0_n)))
               (not (= L1_3_n (select aux!30_n L1_2_n)))
               (>= (+ L1_2_0 (* (- 1) L1_4_n)) 0)))
      (a!8 (and (= L1_0_0 L1_0_n)
                (= L1_4_0 L1_4_n)
                (= L1_5_0 L1_2_0)
                (= L1_0_1 L1_0_n)
                (= L1_2_1 L1_2_n)
                (= L1_4_1 L1_4_n)
                (= L1_5_1 L1_2_0)
                a!7
                (= (select aux!34_n L1_0_n) (select aux!31_n L1_0_n))
                (= (select aux!36_n L1_0_n) (select aux!31_n L1_0_n))
                (= (select aux!35_n L1_2_n) (select aux!32_n L1_2_n))
                (= (select aux!33_n L1_2_0) (select aux!32_n L1_2_0))
                (= (select aux!32_n L1_2_n) (select aux!30_n L1_2_n))
                (= L1_3_1 (select aux!35_n L1_2_n))
                (= L1_1_1 (select aux!36_n L1_0_n))
                (= L1_3_0 (select aux!33_n L1_2_0))
                (= L1_5_n (+ 1 L1_2_0))
                (= L1_1_n (select aux!29_n L1_0_n))
                (= L1_1_0 (select aux!34_n L1_0_n))
                (= L1_3_n (select aux!30_n L1_2_n))
                (not (<= L1_4_n L1_2_0))))
      (a!9 (= (select (store aux!31_n L1_2_0 (select aux!32_n L1_2_0)) L1_0_n)
              a!3))
      (a!14 (monotonicity (rewrite a!12) (= (not (<= L1_4_n L1_2_0)) a!13)))
      (a!15 (and (= L1_0_0 L1_0_n)
                 (= L1_4_0 L1_4_n)
                 (= L1_5_0 L1_2_0)
                 (= L1_0_1 L1_0_n)
                 (= L1_2_1 L1_2_n)
                 (= L1_4_1 L1_4_n)
                 (= L1_5_1 L1_2_0)
                 (= a!3 (select aux!29_n L1_0_n))
                 (= (select aux!34_n L1_0_n) (select aux!31_n L1_0_n))
                 (= (select aux!36_n L1_0_n) (select aux!31_n L1_0_n))
                 (= (select aux!35_n L1_2_n) (select aux!32_n L1_2_n))
                 (= (select aux!33_n L1_2_0) (select aux!32_n L1_2_0))
                 (= (select aux!32_n L1_2_n) (select aux!30_n L1_2_n))
                 (= L1_3_1 (select aux!35_n L1_2_n))
                 (= L1_1_1 (select aux!36_n L1_0_n))
                 (= L1_3_0 (select aux!33_n L1_2_0))
                 (= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))
                 (= L1_1_n (select aux!29_n L1_0_n))
                 (= L1_1_0 (select aux!34_n L1_0_n))
                 (= L1_3_n (select aux!30_n L1_2_n))
                 a!13))
      (a!21 (monotonicity (rewrite (= a!19 (not a!20)))
                          (= (or (not L1_tr0) a!19)
                             (or (not L1_tr0) (not a!20)))))
      (a!25 (unit-resolution (asserted a!24)
                             (asserted spacer_proxy!1)
                             (<= (+ L1_4_n (* (- 1) L1_5_n)) 0)))
      (a!51 (def-axiom (or (not (= L1_0_n L1_2_0))
                           (= (select aux!32_n L1_2_0) a!3)))))
(let ((a!6 (def-axiom (or a!5 (= L1_3_n (select aux!30_n L1_2_n)))))
      (a!10 (monotonicity (rewrite a!9)
                          (= a!7 (= a!3 (select aux!29_n L1_0_n)))))
      (a!18 (monotonicity (rewrite (= a!15 (not a!5)))
                          (= (or (not L1_tr1) a!15) (or (not L1_tr1) (not a!5)))))
      (a!22 (mp (asserted (or (not L1_tr0) a!19))
                a!21
                (or (not L1_tr0) (not a!20))))
      (a!26 (th-lemma (unit-resolution a!23
                                       (asserted spacer_proxy!4)
                                       (not (<= L1_4_n 0)))
                      a!25
                      (not (<= L1_5_n 0))))
      (a!31 (def-axiom (or a!5
                           (= (select aux!32_n L1_2_n) (select aux!30_n L1_2_n)))))
      (a!41 (or a!5 (= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!57 (def-axiom (or a!5 (= a!3 (select aux!29_n L1_0_n)))))
      (a!59 (def-axiom (or a!5 (= L1_1_n (select aux!29_n L1_0_n))))))
(let ((a!16 (monotonicity (monotonicity a!10 (rewrite a!11) a!14 (= a!8 a!15))
                          (= (or (not L1_tr1) a!8) (or (not L1_tr1) a!15))))
      (a!27 (lemma (th-lemma (hypothesis (= L1_5_n 0)) a!26 false)
                   (not (= L1_5_n 0)))))
(let ((a!17 (mp (asserted (or (not L1_tr1) a!8)) a!16 (or (not L1_tr1) a!15)))
      (a!28 (unit-resolution (def-axiom (or a!20 (= L1_5_n 0))) a!27 a!20)))
(let ((a!29 (unit-resolution (asserted (or L1_ext0_n L1_tr0 L1_tr1))
                             (unit-resolution a!22 a!28 (not L1_tr0))
                             (asserted (not L1_ext0_n))
                             L1_tr1)))
(let ((a!30 (unit-resolution (mp a!17 a!18 (or (not L1_tr1) (not a!5)))
                             a!29
                             (not a!5)))
      (a!40 (unit-resolution (mp a!35
                                 (trans (monotonicity a!36 a!37)
                                        (rewrite a!38)
                                        a!39)
                                 (or (not L1_tr1)
                                     (<= L1_5_1 0)
                                     |L1#level_1!112|))
                             a!29
                             (asserted (not |L1#level_1!112|))
                             (<= L1_5_1 0))))
(let ((a!32 (symm (unit-resolution a!31
                                   a!30
                                   (= (select aux!32_n L1_2_n)
                                      (select aux!30_n L1_2_n)))
                  (= (select aux!30_n L1_2_n) (select aux!32_n L1_2_n))))
      (a!34 (unit-resolution (def-axiom (or a!5 (= L1_5_1 L1_2_0)))
                             a!30
                             (= L1_5_1 L1_2_0)))
      (a!42 (unit-resolution (def-axiom a!41)
                             a!30
                             (= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!60 (symm (unit-resolution a!59
                                   a!30
                                   (= L1_1_n (select aux!29_n L1_0_n)))
                  (= (select aux!29_n L1_0_n) L1_1_n))))
(let ((a!33 (trans (unit-resolution a!6
                                    a!30
                                    (= L1_3_n (select aux!30_n L1_2_n)))
                   a!32
                   (= L1_3_n (select aux!32_n L1_2_n))))
      (a!43 (th-lemma a!42 (>= (+ L1_2_0 (* (- 1) L1_5_n)) (- 1))))
      (a!44 (th-lemma (symm a!34 (= L1_2_0 L1_5_1))
                      (<= (+ L1_2_0 (* (- 1) L1_5_1)) 0)))
      (a!54 (trans (monotonicity (th-lemma a!52 a!53 (= L1_0_n 0))
                                 (symm a!34 (= L1_2_0 L1_5_1))
                                 (= (= L1_0_n L1_2_0) (= 0 L1_5_1)))
                   (commutativity (= (= 0 L1_5_1) (= L1_5_1 0)))
                   (= (= L1_0_n L1_2_0) (= L1_5_1 0)))))
(let ((a!45 (th-lemma (hypothesis (not (>= L1_5_1 0)))
                      a!43
                      (unit-resolution a!23
                                       (asserted spacer_proxy!4)
                                       (not (<= L1_4_n 0)))
                      a!25
                      a!44
                      false)))
(let ((a!46 (th-lemma (hypothesis (not (= L1_5_1 0)))
                      a!40
                      (lemma a!45 (>= L1_5_1 0))
                      false)))
(let ((a!49 (trans (trans (symm a!34 (= L1_2_0 L1_5_1))
                          (lemma a!46 (= L1_5_1 0))
                          (= L1_2_0 0))
                   (symm (th-lemma a!47 a!48 (= L1_2_n 0)) (= 0 L1_2_n))
                   (= L1_2_0 L1_2_n)))
      (a!55 (mp (lemma a!46 (= L1_5_1 0))
                (symm a!54 (= (= L1_5_1 0) (= L1_0_n L1_2_0)))
                (= L1_0_n L1_2_0))))
(let ((a!50 (symm (monotonicity a!49
                                (= (select aux!32_n L1_2_0) (select aux!32_n L1_2_n)))
                  (= (select aux!32_n L1_2_n) (select aux!32_n L1_2_0)))))
(let ((a!56 (trans (trans a!33 a!50 (= L1_3_n (select aux!32_n L1_2_0)))
                   (unit-resolution a!51 a!55 (= (select aux!32_n L1_2_0) a!3))
                   (= L1_3_n a!3))))
(let ((a!58 (trans a!56
                   (unit-resolution a!57 a!30 (= a!3 (select aux!29_n L1_0_n)))
                   (= L1_3_n (select aux!29_n L1_0_n)))))
  (th-lemma a!2 (trans a!58 a!60 (= L1_3_n L1_1_n)) false))))))))))))))))
------------------------------------------------
-------- [spacer] is_reachable ../src/muz/spacer/spacer_context.cpp:819 ---------
------------------------------------------------
-------- [spacer] is_reachable ../src/muz/spacer/spacer_context.cpp:843 ---------
unreachable with lemmas
Core:
(not (<= (+ L1_3_n (* (- 1) L1_1_n)) 0))
(not (<= L1_5_n 0))
(= L1_0_n 0)
(= 0 L1_2_n)

------------------------------
L1_0_n == 0
L1_5_1 == 0
L1_5_1 == L1_2_0
-----------------
L1_0_n == L1_2_0         a!55

L1_5_1 == L1_2_0
L1_5_1 == 0
L1_2_n == 0
-----------------        
L1_2_n == L1_2_0         a!49

(a!3 (ite (= L1_0_n L1_2_0) (select aux!32_n L1_2_0) (select aux!31_n L1_0_n)))
(a!51 (def-axiom (or (not (= L1_0_n L1_2_0))
                           (= (select aux!32_n L1_2_0) a!3))))
                           
(not (<= (+ L1_3_n (* (- 1) L1_1_n)) 0)) (= L1_3_n L1_1_n)
---------------------------------------------------------------
false
