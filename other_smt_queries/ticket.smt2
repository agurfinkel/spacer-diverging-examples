(declare-var pc (Array Int Int))
(declare-var t (Array Int Int))
(declare-var serving Int)
(declare-var ticket Int)
(declare-var pc_p (Array Int Int))
(declare-var t_p (Array Int Int))
(declare-var serving_p Int)
(declare-var ticket_p Int)
(declare-var id0 Int)
(declare-var id1 Int)
(declare-var id2 Int)
(declare-rel Inv (Int Int (Array Int Int) (Array Int Int) Int Int))
(declare-rel Error ())
(rule (! (=> (and (= (select pc id0) 0)
         (> (select t id0) 0)
         (= ticket 0)
         (= serving 0)
         (= (select pc id1) 0)
         (> (select t id1) 0)
         (= ticket 0)
         (= serving 0)
         (distinct id0 id1))
    (Inv id0 id1 pc t serving ticket)) :named init))
(rule (! (=> (and (Inv id0 id1 pc t serving ticket)
         (= (select pc id0) 0)
         (= pc_p (store pc id0 1))
         (= t_p (store t id0 ticket))
         (= ticket_p (+ ticket 1))
         (distinct id0 id1))
    (Inv id0 id1 pc_p t_p serving ticket_p)) :named tr1_self))
(rule (! (=> (and (Inv id0 id1 pc t serving ticket)
         (= (select pc id1) 0)
         (= pc_p (store pc id1 1))
         (= t_p (store t id1 ticket))
         (= ticket_p (+ ticket 1))
         (distinct id0 id1))
    (Inv id0 id1 pc_p t_p serving ticket_p)) :named tr1_other))
(rule (! (=> (and (Inv id0 id1 pc t serving ticket)
         (Inv id2 id0 pc t serving ticket)
         (Inv id2 id1 pc t serving ticket)
         (distinct id0 id1 id2)
         (= (select pc id2) 0)
         (= pc_p (store pc id2 1))
         (= t_p (store t id2 ticket))
         (= ticket_p (+ ticket 1)))
    (Inv id0 id1 pc_p t_p serving ticket_p)) :named tr1_other_other))
(rule (! (=> (and (Inv id0 id1 pc t serving ticket)
         (= (select pc id0) 1)
         (= (select t id0) serving)
         (= pc_p (store pc id0 2))
         (distinct id0 id1))
    (Inv id0 id1 pc_p t serving ticket)) :named tr2_self))
(rule (! (=> (and (Inv id0 id1 pc t serving ticket)
         (= (select pc id1) 1)
         (= (select t id1) serving)
         (= pc_p (store pc id1 2))
         (distinct id0 id1))
    (Inv id0 id1 pc_p t serving ticket)) :named tr2_other))
(rule (! (=> (and (Inv id0 id1 pc t serving ticket)
         (Inv id2 id0 pc t serving ticket)
         (Inv id2 id1 pc t serving ticket)
         (distinct id0 id1 id2)
         (= (select pc id2) 1)
         (= (select t id2) serving)
         (= pc_p (store pc id2 2)))
    (Inv id0 id1 pc_p t serving ticket)) :named tr2_other_other))
(rule (! (let ((a!1 (and (Inv id0 id1 pc t serving ticket)
                (= (select pc id0) 2)
                (= pc_p (store pc id0 0))
                (= serving_p (+ (select t id0) 1))
                (distinct id0 id1))))
  (=> a!1 (Inv id0 id1 pc_p t serving_p ticket))) :named tr3_self))
(rule (! (let ((a!1 (and (Inv id0 id1 pc t serving ticket)
                (= (select pc id1) 2)
                (= pc_p (store pc id1 0))
                (= serving_p (+ (select t id1) 1))
                (distinct id0 id1))))
  (=> a!1 (Inv id0 id1 pc_p t serving_p ticket))) :named tr3_other))
(rule (! (let ((a!1 (and (Inv id0 id1 pc t serving ticket)
                (Inv id2 id0 pc t serving ticket)
                (Inv id2 id1 pc t serving ticket)
                (distinct id0 id1 id2)
                (= (select pc id2) 2)
                (= pc_p (store pc id2 0))
                (= serving_p (+ (select t id2) 1)))))
  (=> a!1 (Inv id0 id1 pc_p t serving_p ticket))) :named tr3_other_other))
(rule (! (=> (and (Inv id0 id1 pc t serving ticket)
         (distinct id0 id1)
         (= (select pc id0) 2)
         (= (select pc id1) 2))
    Error) :named bad))
(query Error)

