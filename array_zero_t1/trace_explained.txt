expand-node: query level: 0 depth: 0
true

add-lemma: 0 query!0 false


* LEVEL 1
expand-node: query level: 1 depth: 0
true

expand-node: query level: 0 depth: 0
true

add-lemma: 0 Error false

expand-node: query level: 1 depth: 0
true

add-lemma: 1 query!0 false


* LEVEL 2
expand-node: query level: 2 depth: 0
true

expand-node: query level: 1 depth: 0
true

expand-node: query level: 0 depth: 0
(and (= L2_0_n 0) (> (select L2_2_n zk!0) 0) (> L2_1_n zk!0) (>= zk!0 0))
(and (j=0) (> B[k] 0) (M > k) (k >= 0)

add-lemma: 0 L2 false

expand-node: query level: 1 depth: 0
true

add-lemma: 1 Error false

expand-node: query level: 2 depth: 0
true

add-lemma: 2 query!0 false


* LEVEL 3
expand-node: query level: 3 depth: 0
true

expand-node: query level: 2 depth: 0
true

expand-node: query level: 1 depth: 0
(and (= L2_0_n 0) (> (select L2_2_n zk!0) 0) (> L2_1_n zk!0) (>= zk!0 0))
## (and (j=0) (> B[k] 0) (M > k) (k >= 0)

expand-node: query level: 0 depth: 0
(and (>= zk!0 0) (> L1_1_n zk!0) (<= L1_1_n L1_0_n) (> (select L1_2_n zk!0) 0))
## (and (<= N i) (A[k]=0) (> N k) (>= k 0))

add-lemma: 0 L1 (<= L1_0_n 0)
## bad lemma
## (<= i 0)

expand-node: query level: 1 depth: 0
(and (= L2_0_n 0) (> (select L2_2_n zk!0) 0) (> L2_1_n zk!0) (>= zk!0 0))

add-lemma: 1 L2 (<= L2_1_n 0)
## bad lemma
## (<= j 0)

expand-node: query level: 2 depth: 0
true

add-lemma: 2 Error false

expand-node: query level: 3 depth: 0
true

add-lemma: 3 query!0 false


* LEVEL 4
expand-node: query level: 4 depth: 0
true

expand-node: query level: 3 depth: 0
true

expand-node: query level: 2 depth: 0
(and (= L2_0_n 0) (> L2_1_n zk!0) (>= zk!0 0) (> (select L2_2_n zk!0) 0))
## same as before
##(and (j=0) (> B[k] 0) (M > k) (k >= 0)

expand-node: query level: 1 depth: 0
(and (>= zk!0 0) (<= L1_1_n L1_0_n) (> (select L1_2_n zk!0) 0) (> L1_1_n zk!0))
## same as before
## (and (<= N i) (A[k]=0) (> N k) (>= k 0))

add-lemma: 1 L1 (forall ((zk!0 Int))
  (or (< zk!0 0) (<= (select L1_2_n zk!0) 0) (<= L1_0_n zk!0)))
## very good lemma which is sufficient to proof the property
## (implies 
##	(0 <= k < i)
##	(A[k] = 0)
## )

expand-node: query level: 2 depth: 0
(and (= L2_0_n 0) (> L2_1_n zk!0) (>= zk!0 0) (> (select L2_2_n zk!0) 0))

add-lemma: 2 L2 (forall ((zk!0 Int))
## same lemma as before but for location L2 instead L1
  (or (<= L2_1_n zk!0) (< zk!0 0) (<= (select L2_2_n zk!0) 0)))

expand-node: query level: 3 depth: 0
true

add-lemma: 3 Error false

expand-node: query level: 4 depth: 0
true

add-lemma: 4 query!0 false

