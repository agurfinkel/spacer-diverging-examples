
Mapping:
(L1 i N A)
(L2 j M B)

i = i
N = N
A = A

j = j
M = M
B = B
##############################################
START OF TRACE
##############################################

* LEVEL 0
expand-node: query level: 0 depth: 0
true

add-lemma: 0 query!0 false


* LEVEL 1
expand-node: query level: 1 depth: 0
true

expand-node: query level: 0 depth: 0
true

add-lemma: 0 Error false

expand-node: query level: 1 depth: 0
true

add-lemma: 1 query!0 false


* LEVEL 2
expand-node: query level: 2 depth: 0
true

expand-node: query level: 1 depth: 0
true

expand-node: query level: 0 depth: 0
(and (< j M) (B[j] > 0))

add-lemma: 0 L2 false

expand-node: query level: 1 depth: 0
true

add-lemma: 1 Error false

expand-node: query level: 2 depth: 0
true

add-lemma: 2 query!0 false


* LEVEL 3
expand-node: query level: 3 depth: 0
true

expand-node: query level: 2 depth: 0
true

expand-node: query level: 1 depth: 0
(and 
  (< j M) 
  (B[j] > 0))

expand-node: query level: 0 depth: 0
(and 
  (> N 0)
  (A[0] > 0)
  (<= N i))

add-lemma: 0 L1 (<= i 0)

expand-node: query level: 1 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 1 L2 (<= (+ M (* (- 1) j)) 0)

expand-node: query level: 2 depth: 0
true

add-lemma: 2 Error false

expand-node: query level: 3 depth: 0
true

add-lemma: 3 query!0 false


* LEVEL 4
expand-node: query level: 4 depth: 0
true

expand-node: query level: 3 depth: 0
true

expand-node: query level: 2 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and a!1 (not (<= (select B j) 0))))

expand-node: query level: 1 depth: 0
(and (not (<= (select A 0) 0))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= N 0)))

add-lemma: 1 L1 (or (<= (select A 0) 0) (<= i 0))

expand-node: query level: 2 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and a!1 (not (<= (select B j) 0))))

add-lemma: 2 L2 (or (>= (+ j (* (- 1) M)) 0) (<= (select B j) 0))

expand-node: query level: 3 depth: 0
true

add-lemma: 3 Error false

expand-node: query level: 4 depth: 0
true

add-lemma: 4 query!0 false


* LEVEL 5
expand-node: query level: 5 depth: 0
true

expand-node: query level: 4 depth: 0
true

expand-node: query level: 3 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 2 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 1)))
      (a!2 (not (<= (select B (+ 1 j)) 0))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 1 depth: 0
(and (<= (select A 0) 0)
     (not (<= N 1))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 1) 0)))

add-lemma: 1 L1 (<= i 1)

expand-node: query level: 2 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 1)))
      (a!2 (not (<= (select B (+ 1 j)) 0))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 2 L2 (<= (+ M (* (- 1) j)) 1)

expand-node: query level: 3 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 3 L2 (or (>= (+ j (* (- 1) M)) 0) (<= (select B j) 0))

expand-node: query level: 4 depth: 0
true

add-lemma: 4 Error false

expand-node: query level: 5 depth: 0
true

add-lemma: 5 query!0 false


* LEVEL 6
expand-node: query level: 6 depth: 0
true

expand-node: query level: 5 depth: 0
true

expand-node: query level: 4 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 3 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 1)))
      (a!2 (not (<= (select B (+ 1 j)) 0))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 2 depth: 0
(and (<= (select A 0) 0)
     (not (<= N 1))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 1) 0)))

add-lemma: 2 L1 (or (<= (select A 1) 0) (<= i 1))

expand-node: query level: 3 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 1)))
      (a!2 (not (<= (select B (+ 1 j)) 0))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 3 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 4 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 4 L2 (or (>= (+ j (* (- 1) M)) 0) (<= (select B j) 0))

expand-node: query level: 5 depth: 0
true

add-lemma: 5 Error false

expand-node: query level: 6 depth: 0
true

add-lemma: 6 query!0 false


* LEVEL 7
expand-node: query level: 7 depth: 0
true

expand-node: query level: 6 depth: 0
true

expand-node: query level: 5 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 4 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 3 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 2 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (not (<= N 2))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 2) 0)))

add-lemma: 2 L1 (<= i 2)

expand-node: query level: 3 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 3 L2 (<= (+ M (* (- 1) j)) 2)

expand-node: query level: 4 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 4 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 5 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 5 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 6 depth: 0
true

add-lemma: 6 Error false

expand-node: query level: 7 depth: 0
true

add-lemma: 7 query!0 false


* LEVEL 8
expand-node: query level: 8 depth: 0
true

expand-node: query level: 7 depth: 0
true

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 5 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 4 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 3 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (not (<= (select A 2) 0))
     (not (<= N 2))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 3 L1 (or (<= (select A 2) 0) (<= i 2))

expand-node: query level: 4 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 4 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 5 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 5 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 6 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 7 depth: 0
true

add-lemma: 7 Error false

expand-node: query level: 8 depth: 0
true

add-lemma: 8 query!0 false


* LEVEL 9
expand-node: query level: 9 depth: 0
true

expand-node: query level: 8 depth: 0
true

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 5 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 4 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 3 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (+ N (* (- 1) i)) 0)
     (not (<= N 3))
     (not (<= (select A 3) 0)))

add-lemma: 3 L1 (<= i 3)

expand-node: query level: 4 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 4 L2 (<= (+ M (* (- 1) j)) 3)

expand-node: query level: 5 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 5 L2 (or (>= (+ j (* (- 1) M)) (- 2)) (<= (select B (+ 2 j)) 0))

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 6 L2 (or (>= (+ j (* (- 1) M)) (- 1)) (<= (select B (+ 1 j)) 0))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 7 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 8 depth: 0
true

add-lemma: 8 Error false

expand-node: query level: 9 depth: 0
true

add-lemma: 9 query!0 false


* LEVEL 10
expand-node: query level: 10 depth: 0
true

expand-node: query level: 9 depth: 0
true

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 5 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 4 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (not (<= N 3))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 3) 0)))

add-lemma: 4 L1 (or (<= (select A 3) 0) (<= i 3))

expand-node: query level: 5 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 5 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 6 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 7 L2 (or (>= (+ j (* (- 1) M)) (- 1)) (<= (select B (+ 1 j)) 0))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 8 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 9 depth: 0
true

add-lemma: 9 Error false

expand-node: query level: 10 depth: 0
true

add-lemma: 10 query!0 false


* LEVEL 11
expand-node: query level: 11 depth: 0
true

expand-node: query level: 10 depth: 0
true

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and a!1 (not (<= (select B j) 0))))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 1)))
      (a!2 (not (<= (select B (+ 1 j)) 0))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 5 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 4 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (not (<= (select A 4) 0))
     (not (<= N 4))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 4 L1 (<= i 4)

expand-node: query level: 5 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 5 L2 (<= (+ M (* (- 1) j)) 4)

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 6 L2 (or (>= (+ j (* (- 1) M)) (- 3)) (<= (select B (+ 3 j)) 0))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 7 L2 (or (>= (+ j (* (- 1) M)) (- 2)) (<= (select B (+ 2 j)) 0))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 1)))
      (a!2 (not (<= (select B (+ 1 j)) 0))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 8 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and a!1 (not (<= (select B j) 0))))

add-lemma: 9 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 10 depth: 0
true

add-lemma: 10 Error false

expand-node: query level: 11 depth: 0
true

add-lemma: 11 query!0 false


* LEVEL 12
expand-node: query level: 12 depth: 0
true

expand-node: query level: 11 depth: 0
true

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 5 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (not (<= N 4))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 4) 0)))

add-lemma: 5 L1 (or (<= (select A 4) 0) (<= i 4))

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 6 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 7 L2 (or (>= (+ j (* (- 1) M)) (- 3)) (<= (select B (+ 3 j)) 0))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 8 L2 (or (>= (+ j (* (- 1) M)) (- 2)) (<= (select B (+ 2 j)) 0))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 9 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 10 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 11 depth: 0
true

add-lemma: 11 Error false

expand-node: query level: 12 depth: 0
true

add-lemma: 12 query!0 false


* LEVEL 13
expand-node: query level: 13 depth: 0
true

expand-node: query level: 12 depth: 0
true

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 5 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (not (<= (select A 5) 0))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= N 5)))

add-lemma: 5 L1 (<= i 5)

expand-node: query level: 6 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 6 L2 (<= (+ M (* (- 1) j)) 5)

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 7 L2 (or (>= (+ j (* (- 1) M)) (- 4)) (<= (select B (+ 4 j)) 0))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 8 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 9 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 10 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 11 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 12 depth: 0
true

add-lemma: 12 Error false

expand-node: query level: 13 depth: 0
true

add-lemma: 13 query!0 false


* LEVEL 14
expand-node: query level: 14 depth: 0
true

expand-node: query level: 13 depth: 0
true

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 6 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (+ N (* (- 1) i)) 0)
     (not (<= N 5))
     (not (<= (select A 5) 0)))

add-lemma: 6 L1 (or (<= (select A 5) 0) (<= i 5))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 7 L2 (or (>= (+ j (* (- 1) M)) (- 5)) (<= (select B (+ 5 j)) 0))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 8 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 9 L2 (or (>= (+ j (* (- 1) M)) (- 3)) (<= (select B (+ 3 j)) 0))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 10 L2 (or (>= (+ j (* (- 1) M)) (- 2)) (<= (select B (+ 2 j)) 0))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 11 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 12 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 13 depth: 0
true

add-lemma: 13 Error false

expand-node: query level: 14 depth: 0
true

add-lemma: 14 query!0 false


* LEVEL 15
expand-node: query level: 15 depth: 0
true

expand-node: query level: 14 depth: 0
true

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 6 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (not (<= (select A 6) 0))
     (not (<= N 6))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 6 L1 (<= i 6)

expand-node: query level: 7 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 7 L2 (<= (+ M (* (- 1) j)) 6)

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 8 L2 (or (>= (+ j (* (- 1) M)) (- 5)) (<= (select B (+ 5 j)) 0))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 9 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 10 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 11 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 12 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 13 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 14 depth: 0
true

add-lemma: 14 Error false

expand-node: query level: 15 depth: 0
true

add-lemma: 15 query!0 false


* LEVEL 16
expand-node: query level: 16 depth: 0
true

expand-node: query level: 15 depth: 0
true

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 7 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (not (<= N 6))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 6) 0)))

add-lemma: 7 L1 (or (<= (select A 6) 0) (<= i 6))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 8 L2 (or (>= (+ j (* (- 1) M)) (- 6)) (<= (select B (+ 6 j)) 0))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 9 L2 (or (>= (+ j (* (- 1) M)) (- 5)) (<= (select B (+ 5 j)) 0))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 10 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 11 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 12 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 13 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 14 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 15 depth: 0
true

add-lemma: 15 Error false

expand-node: query level: 16 depth: 0
true

add-lemma: 16 query!0 false


* LEVEL 17
expand-node: query level: 17 depth: 0
true

expand-node: query level: 16 depth: 0
true

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 7 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (not (<= (select A 7) 0))
     (not (<= N 7))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 7 L1 (<= i 7)

expand-node: query level: 8 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 8 L2 (<= (+ M (* (- 1) j)) 7)

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 9 L2 (or (>= (+ j (* (- 1) M)) (- 6)) (<= (select B (+ 6 j)) 0))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 10 L2 (or (>= (+ j (* (- 1) M)) (- 5)) (<= (select B (+ 5 j)) 0))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 11 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 12 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 13 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 14 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 15 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 16 depth: 0
true

add-lemma: 16 Error false

expand-node: query level: 17 depth: 0
true

add-lemma: 17 query!0 false


* LEVEL 18
expand-node: query level: 18 depth: 0
true

expand-node: query level: 17 depth: 0
true

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 8 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (not (<= N 7))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 7) 0)))

add-lemma: 8 L1 (or (<= (select A 7) 0) (<= i 7))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 9 L2 (or (>= (+ j (* (- 1) M)) (- 7)) (<= (select B (+ 7 j)) 0))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 10 L2 (or (>= (+ j (* (- 1) M)) (- 6)) (<= (select B (+ 6 j)) 0))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 11 L2 (or (>= (+ j (* (- 1) M)) (- 5)) (<= (select B (+ 5 j)) 0))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 12 L2 (or (>= (+ j (* (- 1) M)) (- 4)) (<= (select B (+ 4 j)) 0))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 13 L2 (or (>= (+ j (* (- 1) M)) (- 3)) (<= (select B (+ 3 j)) 0))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 15 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 16 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 17 depth: 0
true

add-lemma: 17 Error false

expand-node: query level: 18 depth: 0
true

add-lemma: 18 query!0 false


* LEVEL 19
expand-node: query level: 19 depth: 0
true

expand-node: query level: 18 depth: 0
true

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 8 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (not (<= N 8))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 8) 0)))

add-lemma: 8 L1 (<= i 8)

expand-node: query level: 9 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 9 L2 (<= (+ M (* (- 1) j)) 8)

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 10 L2 (or (>= (+ j (* (- 1) M)) (- 7)) (<= (select B (+ 7 j)) 0))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 11 L2 (or (>= (+ j (* (- 1) M)) (- 6)) (<= (select B (+ 6 j)) 0))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 12 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 13 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 16 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 17 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 18 depth: 0
true

add-lemma: 18 Error false

expand-node: query level: 19 depth: 0
true

add-lemma: 19 query!0 false


* LEVEL 20
expand-node: query level: 20 depth: 0
true

expand-node: query level: 19 depth: 0
true

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 9 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (not (<= N 8))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 8) 0)))

add-lemma: 9 L1 (or (<= (select A 8) 0) (<= i 8))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 10 L2 (or (>= (+ j (* (- 1) M)) (- 8)) (<= (select B (+ 8 j)) 0))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 11 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 12 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 13 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 17 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 18 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 19 depth: 0
true

add-lemma: 19 Error false

expand-node: query level: 20 depth: 0
true

add-lemma: 20 query!0 false


* LEVEL 21
expand-node: query level: 21 depth: 0
true

expand-node: query level: 20 depth: 0
true

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 9 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (not (<= N 9))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 9) 0)))

add-lemma: 9 L1 (<= i 9)

expand-node: query level: 10 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 10 L2 (<= (+ M (* (- 1) j)) 9)

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 11 L2 (or (>= (+ j (* (- 1) M)) (- 8)) (<= (select B (+ 8 j)) 0))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 12 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 13 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 18 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 19 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 20 depth: 0
true

add-lemma: 20 Error false

expand-node: query level: 21 depth: 0
true

add-lemma: 21 query!0 false


* LEVEL 22
expand-node: query level: 22 depth: 0
true

expand-node: query level: 21 depth: 0
true

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 10 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (not (<= N 9))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 9) 0)))

add-lemma: 10 L1 (or (<= (select A 9) 0) (<= i 9))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 11 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 12 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 13 L2 (or (>= (+ j (* (- 1) M)) (- 7)) (<= (select B (+ 7 j)) 0))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 19 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 20 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 21 depth: 0
true

add-lemma: 21 Error false

expand-node: query level: 22 depth: 0
true

add-lemma: 22 query!0 false


* LEVEL 23
expand-node: query level: 23 depth: 0
true

expand-node: query level: 22 depth: 0
true

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 10 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (not (<= N 10))
     (not (<= (select A 10) 0))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 10 L1 (<= i 10)

expand-node: query level: 11 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 11 L2 (<= (+ M (* (- 1) j)) 10)

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 12 L2 (or (>= (+ j (* (- 1) M)) (- 9)) (<= (select B (+ 9 j)) 0))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 13 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 20 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 21 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 22 depth: 0
true

add-lemma: 22 Error false

expand-node: query level: 23 depth: 0
true

add-lemma: 23 query!0 false


* LEVEL 24
expand-node: query level: 24 depth: 0
true

expand-node: query level: 23 depth: 0
true

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 11 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (not (<= N 10))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 10) 0)))

add-lemma: 11 L1 (or (<= i 10) (<= (select A 10) 0))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 12 L2 (or (>= (+ j (* (- 1) M)) (- 10))
    (<= (select B (+ 10 j)) 0))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 13 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (>= (+ j (* (- 1) M)) (- 8)) (<= (select B (+ 8 j)) 0))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (>= (+ j (* (- 1) M)) (- 6)) (<= (select B (+ 6 j)) 0))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 21 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 22 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 23 depth: 0
true

add-lemma: 23 Error false

expand-node: query level: 24 depth: 0
true

add-lemma: 24 query!0 false


* LEVEL 25
expand-node: query level: 25 depth: 0
true

expand-node: query level: 24 depth: 0
true

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 11)))
      (a!2 (not (<= (select B (+ 11 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 11 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (not (<= N 11))
     (<= (select A 10) 0)
     (not (<= (select A 11) 0))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 11 L1 (<= i 11)

expand-node: query level: 12 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 11)))
      (a!2 (not (<= (select B (+ 11 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 12 L2 (<= (+ M (* (- 1) j)) 11)

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 13 L2 (or (>= (+ j (* (- 1) M)) (- 10))
    (<= (select B (+ 10 j)) 0))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (>= (+ j (* (- 1) M)) (- 9)) (<= (select B (+ 9 j)) 0))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 22 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 23 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 24 depth: 0
true

add-lemma: 24 Error false

expand-node: query level: 25 depth: 0
true

add-lemma: 25 query!0 false


* LEVEL 26
expand-node: query level: 26 depth: 0
true

expand-node: query level: 25 depth: 0
true

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 12 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (not (<= N 11))
     (<= (select A 10) 0)
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 11) 0)))

add-lemma: 12 L1 (or (<= i 11) (<= (select A 11) 0))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 13 L2 (or (<= (select B (+ 11 j)) 0)
    (>= (+ j (* (- 1) M)) (- 11)))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (>= (+ j (* (- 1) M)) (- 10))
    (<= (select B (+ 10 j)) 0))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (>= (+ j (* (- 1) M)) (- 9)) (<= (select B (+ 9 j)) 0))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (>= (+ j (* (- 1) M)) (- 8)) (<= (select B (+ 8 j)) 0))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (>= (+ j (* (- 1) M)) (- 7)) (<= (select B (+ 7 j)) 0))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (>= (+ j (* (- 1) M)) (- 5)) (<= (select B (+ 5 j)) 0))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (>= (+ j (* (- 1) M)) (- 3)) (<= (select B (+ 3 j)) 0))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 23 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 24 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 25 depth: 0
true

add-lemma: 25 Error false

expand-node: query level: 26 depth: 0
true

add-lemma: 26 query!0 false


* LEVEL 27
expand-node: query level: 27 depth: 0
true

expand-node: query level: 26 depth: 0
true

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 12 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 12))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       (<= (select B (+ 11 j)) 0)
       a!2))

expand-node: query level: 12 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (not (<= (select A 12) 0))
     (not (<= N 12))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 12 L1 (<= i 12)

expand-node: query level: 13 depth: 0
(let ((a!1 (not (<= (select B (+ 12 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 12))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       (<= (select B (+ 11 j)) 0)
       a!2))

add-lemma: 13 L2 (<= (+ M (* (- 1) j)) 12)

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (>= (+ j (* (- 1) M)) (- 11))
    (<= (select B (+ 11 j)) 0))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (>= (+ j (* (- 1) M)) (- 10))
    (<= (select B (+ 10 j)) 0))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 24 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 25 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 26 depth: 0
true

add-lemma: 26 Error false

expand-node: query level: 27 depth: 0
true

add-lemma: 27 query!0 false


* LEVEL 28
expand-node: query level: 28 depth: 0
true

expand-node: query level: 27 depth: 0
true

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 12 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 12))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (not (<= N 12))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 12) 0)))

add-lemma: 13 L1 (or (<= (select A 12) 0) (<= i 12))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 12 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 12))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (or (>= (+ j (* (- 1) M)) (- 12))
    (<= (select B (+ 12 j)) 0))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (>= (+ j (* (- 1) M)) (- 11))
    (<= (select B (+ 11 j)) 0))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (<= (select B (+ 10 j)) 0)
    (>= (+ j (* (- 1) M)) (- 10)))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (>= (+ j (* (- 1) M)) (- 9)) (<= (select B (+ 9 j)) 0))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 25 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 26 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 27 depth: 0
true

add-lemma: 27 Error false

expand-node: query level: 28 depth: 0
true

add-lemma: 28 query!0 false


* LEVEL 29
expand-node: query level: 29 depth: 0
true

expand-node: query level: 28 depth: 0
true

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 13 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (not (<= N 13))
     (not (<= (select A 13) 0))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 13 L1 (<= i 13)

expand-node: query level: 14 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 14 L2 (<= (+ M (* (- 1) j)) 13)

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (>= (+ j (* (- 1) M)) (- 12))
    (<= (select B (+ 12 j)) 0))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (<= (select B (+ 11 j)) 0)
    (>= (+ j (* (- 1) M)) (- 11)))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (<= (select B (+ 10 j)) 0)
    (>= (+ j (* (- 1) M)) (- 10)))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 26 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 27 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 28 depth: 0
true

add-lemma: 28 Error false

expand-node: query level: 29 depth: 0
true

add-lemma: 29 query!0 false


* LEVEL 30
expand-node: query level: 30 depth: 0
true

expand-node: query level: 29 depth: 0
true

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 11)))
      (a!2 (not (<= (select B (+ 11 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (not (<= N 13))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 13) 0)))

add-lemma: 14 L1 (or (<= i 13) (<= (select A 13) 0))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (or (<= (select B (+ 13 j)) 0)
    (>= (+ j (* (- 1) M)) (- 13)))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (>= (+ j (* (- 1) M)) (- 12))
    (<= (select B (+ 12 j)) 0))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 11)))
      (a!2 (not (<= (select B (+ 11 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (>= (+ j (* (- 1) M)) (- 11))
    (<= (select B (+ 11 j)) 0))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 10 j)) 0)
    (>= (+ j (* (- 1) M)) (- 10)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (>= (+ j (* (- 1) M)) (- 7)) (<= (select B (+ 7 j)) 0))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 26 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 27 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 28 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 29 depth: 0
true

add-lemma: 29 Error false

expand-node: query level: 30 depth: 0
true

add-lemma: 30 query!0 false


* LEVEL 31
expand-node: query level: 31 depth: 0
true

expand-node: query level: 30 depth: 0
true

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 11)))
      (a!2 (not (<= (select B (+ 11 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 12 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 12))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 13)))
      (a!2 (not (<= (select B (+ 13 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 14)))
      (a!2 (not (<= (select B (+ 14 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

expand-node: query level: 14 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (not (<= (select A 14) 0))
     (<= (select A 13) 0)
     (not (<= N 14))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 14 L1 (<= i 14)

expand-node: query level: 15 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 14)))
      (a!2 (not (<= (select B (+ 14 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

add-lemma: 15 L2 (<= (+ M (* (- 1) j)) 14)

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 13)))
      (a!2 (not (<= (select B (+ 13 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (>= (+ j (* (- 1) M)) (- 13))
    (<= (select B (+ 13 j)) 0))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 12 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 12))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (<= (select B (+ 12 j)) 0)
    (>= (+ j (* (- 1) M)) (- 12)))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 11)))
      (a!2 (not (<= (select B (+ 11 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (>= (+ j (* (- 1) M)) (- 11))
    (<= (select B (+ 11 j)) 0))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (>= (+ j (* (- 1) M)) (- 10))
    (<= (select B (+ 10 j)) 0))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 26 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 27 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 28 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 29 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 30 depth: 0
true

add-lemma: 30 Error false

expand-node: query level: 31 depth: 0
true

add-lemma: 31 query!0 false


* LEVEL 32
expand-node: query level: 32 depth: 0
true

expand-node: query level: 31 depth: 0
true

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 11)))
      (a!2 (not (<= (select B (+ 11 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 14)))
      (a!2 (not (<= (select B (+ 14 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (not (<= (select A 14) 0))
     (<= (select A 13) 0)
     (not (<= N 14))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 15 L1 (or (<= (select A 14) 0) (<= i 14))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 14)))
      (a!2 (not (<= (select B (+ 14 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (or (>= (+ j (* (- 1) M)) (- 14))
    (<= (select B (+ 14 j)) 0))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (>= (+ j (* (- 1) M)) (- 13))
    (<= (select B (+ 13 j)) 0))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 12 j)) 0)
    (>= (+ j (* (- 1) M)) (- 12)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 11)))
      (a!2 (not (<= (select B (+ 11 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (<= (select B (+ 11 j)) 0)
    (>= (+ j (* (- 1) M)) (- 11)))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 10 j)) 0)
    (>= (+ j (* (- 1) M)) (- 10)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (>= (+ j (* (- 1) M)) (- 8)) (<= (select B (+ 8 j)) 0))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (>= (+ j (* (- 1) M)) (- 5)) (<= (select B (+ 5 j)) 0))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 26 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 27 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 28 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 29 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 30 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 31 depth: 0
true

add-lemma: 31 Error false

expand-node: query level: 32 depth: 0
true

add-lemma: 32 query!0 false


* LEVEL 33
expand-node: query level: 33 depth: 0
true

expand-node: query level: 32 depth: 0
true

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 12 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 12))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 14)))
      (a!2 (not (<= (select B (+ 14 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 15 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 15))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

expand-node: query level: 15 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (<= (select A 13) 0)
     (<= (select A 14) 0)
     (not (<= (select A 15) 0))
     (not (<= N 15))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 15 L1 (<= i 15)

expand-node: query level: 16 depth: 0
(let ((a!1 (not (<= (select B (+ 15 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 15))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

add-lemma: 16 L2 (<= (+ M (* (- 1) j)) 15)

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 14)))
      (a!2 (not (<= (select B (+ 14 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (>= (+ j (* (- 1) M)) (- 14))
    (<= (select B (+ 14 j)) 0))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (>= (+ j (* (- 1) M)) (- 13))
    (<= (select B (+ 13 j)) 0))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 12 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 12))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (<= (select B (+ 12 j)) 0)
    (>= (+ j (* (- 1) M)) (- 12)))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 11 j)) 0)
    (>= (+ j (* (- 1) M)) (- 11)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (<= (select B (+ 10 j)) 0)
    (>= (+ j (* (- 1) M)) (- 10)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 26 L2 (or (>= (+ j (* (- 1) M)) (- 5)) (<= (select B (+ 5 j)) 0))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 27 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 28 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 29 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 30 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 31 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 32 depth: 0
true

add-lemma: 32 Error false

expand-node: query level: 33 depth: 0
true

add-lemma: 33 query!0 false


* LEVEL 34
expand-node: query level: 34 depth: 0
true

expand-node: query level: 33 depth: 0
true

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 14 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 14))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 15 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 15))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (<= (select A 13) 0)
     (<= (select A 14) 0)
     (not (<= N 15))
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 15) 0)))

add-lemma: 16 L1 (or (<= (select A 15) 0) (<= i 15))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (select B (+ 15 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 15))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (or (<= (select B (+ 15 j)) 0)
    (>= (+ j (* (- 1) M)) (- 15)))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 14 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 14))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 14 j)) 0)
    (>= (+ j (* (- 1) M)) (- 14)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (>= (+ j (* (- 1) M)) (- 13))
    (<= (select B (+ 13 j)) 0))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (>= (+ j (* (- 1) M)) (- 12))
    (<= (select B (+ 12 j)) 0))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (<= (select B (+ 11 j)) 0)
    (>= (+ j (* (- 1) M)) (- 11)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (<= (select B (+ 10 j)) 0)
    (>= (+ j (* (- 1) M)) (- 10)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 9 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 9))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (>= (+ j (* (- 1) M)) (- 9)) (<= (select B (+ 9 j)) 0))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 26 L2 (or (>= (+ j (* (- 1) M)) (- 6)) (<= (select B (+ 6 j)) 0))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 27 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 28 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 29 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 30 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 31 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 32 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 33 depth: 0
true

add-lemma: 33 Error false

expand-node: query level: 34 depth: 0
true

add-lemma: 34 query!0 false


* LEVEL 35
expand-node: query level: 35 depth: 0
true

expand-node: query level: 34 depth: 0
true

expand-node: query level: 33 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 14 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 14))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 15 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 15))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 16)))
      (a!2 (not (<= (select B (+ 16 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       a!2))

expand-node: query level: 16 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (<= (select A 13) 0)
     (<= (select A 14) 0)
     (not (<= (select A 16) 0))
     (<= (select A 15) 0)
     (<= (+ N (* (- 1) i)) 0)
     (not (<= N 16)))

add-lemma: 16 L1 (<= i 16)

expand-node: query level: 17 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 16)))
      (a!2 (not (<= (select B (+ 16 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       a!2))

add-lemma: 17 L2 (<= (+ M (* (- 1) j)) 16)

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 15 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 15))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (>= (+ j (* (- 1) M)) (- 15))
    (<= (select B (+ 15 j)) 0))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 14 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 14))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (>= (+ j (* (- 1) M)) (- 14))
    (<= (select B (+ 14 j)) 0))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 13 j)) 0)
    (>= (+ j (* (- 1) M)) (- 13)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (>= (+ j (* (- 1) M)) (- 12))
    (<= (select B (+ 12 j)) 0))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (<= (select B (+ 11 j)) 0)
    (>= (+ j (* (- 1) M)) (- 11)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 10 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 10))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 10 j)) 0)
    (>= (+ j (* (- 1) M)) (- 10)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 26 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (select B (+ 6 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 6))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 27 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 28 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 29 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (select B (+ 3 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 3))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 30 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 31 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 32 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 33 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 33 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 34 depth: 0
true

add-lemma: 34 Error false

expand-node: query level: 35 depth: 0
true

add-lemma: 35 query!0 false


* LEVEL 36
expand-node: query level: 36 depth: 0
true

expand-node: query level: 35 depth: 0
true

expand-node: query level: 34 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 33 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 13)))
      (a!2 (not (<= (select B (+ 13 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 14 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 14))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 15)))
      (a!2 (not (<= (select B (+ 15 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 16 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 16))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       a!2))

expand-node: query level: 17 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (<= (select A 13) 0)
     (<= (select A 14) 0)
     (<= (select A 15) 0)
     (<= (+ N (* (- 1) i)) 0)
     (not (<= N 16))
     (not (<= (select A 16) 0)))

add-lemma: 17 L1 (or (<= i 16) (<= (select A 16) 0))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 16 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 16))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       a!2))

add-lemma: 18 L2 (or (<= (select B (+ 16 j)) 0)
    (>= (+ j (* (- 1) M)) (- 16)))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 15)))
      (a!2 (not (<= (select B (+ 15 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (>= (+ j (* (- 1) M)) (- 15))
    (<= (select B (+ 15 j)) 0))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 14 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 14))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 14 j)) 0)
    (>= (+ j (* (- 1) M)) (- 14)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 13)))
      (a!2 (not (<= (select B (+ 13 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (<= (select B (+ 13 j)) 0)
    (>= (+ j (* (- 1) M)) (- 13)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (>= (+ j (* (- 1) M)) (- 12))
    (<= (select B (+ 12 j)) 0))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 11 j)) 0)
    (>= (+ j (* (- 1) M)) (- 11)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 10 j)) 0)
    (>= (+ j (* (- 1) M)) (- 10)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (>= (+ j (* (- 1) M)) (- 9)) (<= (select B (+ 9 j)) 0))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 26 L2 (or (>= (+ j (* (- 1) M)) (- 8)) (<= (select B (+ 8 j)) 0))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 27 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 28 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 29 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 30 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 31 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 32 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 33 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 33 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 34 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 34 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 35 depth: 0
true

add-lemma: 35 Error false

expand-node: query level: 36 depth: 0
true

add-lemma: 36 query!0 false


* LEVEL 37
expand-node: query level: 37 depth: 0
true

expand-node: query level: 36 depth: 0
true

expand-node: query level: 35 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 34 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 33 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 14)))
      (a!2 (not (<= (select B (+ 14 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 15 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 15))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 16)))
      (a!2 (not (<= (select B (+ 16 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 17 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 17))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       (<= (select B (+ 16 j)) 0)
       a!2))

expand-node: query level: 17 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (<= (select A 13) 0)
     (<= (select A 14) 0)
     (<= (select A 15) 0)
     (not (<= N 17))
     (<= (select A 16) 0)
     (not (<= (select A 17) 0))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 17 L1 (<= i 17)

expand-node: query level: 18 depth: 0
(let ((a!1 (not (<= (select B (+ 17 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 17))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       (<= (select B (+ 16 j)) 0)
       a!2))

add-lemma: 18 L2 (<= (+ M (* (- 1) j)) 17)

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 16)))
      (a!2 (not (<= (select B (+ 16 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (>= (+ j (* (- 1) M)) (- 16))
    (<= (select B (+ 16 j)) 0))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 15 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 15))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (<= (select B (+ 15 j)) 0)
    (>= (+ j (* (- 1) M)) (- 15)))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 14)))
      (a!2 (not (<= (select B (+ 14 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (>= (+ j (* (- 1) M)) (- 14))
    (<= (select B (+ 14 j)) 0))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (<= (select B (+ 13 j)) 0)
    (>= (+ j (* (- 1) M)) (- 13)))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 12 j)) 0)
    (>= (+ j (* (- 1) M)) (- 12)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 11 j)) 0)
    (>= (+ j (* (- 1) M)) (- 11)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (<= (select B (+ 10 j)) 0)
    (>= (+ j (* (- 1) M)) (- 10)))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 26 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 8)))
      (a!2 (not (<= (select B (+ 8 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 27 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 28 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 29 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 30 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 31 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 32 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 33 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 2)))
      (a!2 (not (<= (select B (+ 2 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 33 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 34 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 34 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 35 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 35 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 36 depth: 0
true

add-lemma: 36 Error false

expand-node: query level: 37 depth: 0
true

add-lemma: 37 query!0 false


* LEVEL 38
expand-node: query level: 38 depth: 0
true

expand-node: query level: 37 depth: 0
true

expand-node: query level: 36 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

expand-node: query level: 35 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 34 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 33 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 12 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 12))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 14)))
      (a!2 (not (<= (select B (+ 14 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 15 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 15))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 16 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 16))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 17)))
      (a!2 (not (<= (select B (+ 17 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       (<= (select B (+ 16 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (<= (select A 13) 0)
     (<= (select A 14) 0)
     (<= (select A 15) 0)
     (not (<= N 17))
     (<= (select A 16) 0)
     (<= (+ N (* (- 1) i)) 0)
     (not (<= (select A 17) 0)))

add-lemma: 18 L1 (or (<= (select A 17) 0) (<= i 17))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 17)))
      (a!2 (not (<= (select B (+ 17 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       (<= (select B (+ 16 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (or (>= (+ j (* (- 1) M)) (- 17))
    (<= (select B (+ 17 j)) 0))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (select B (+ 16 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 16))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (>= (+ j (* (- 1) M)) (- 16))
    (<= (select B (+ 16 j)) 0))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (select B (+ 15 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 15))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (<= (select B (+ 15 j)) 0)
    (>= (+ j (* (- 1) M)) (- 15)))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 14)))
      (a!2 (not (<= (select B (+ 14 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (>= (+ j (* (- 1) M)) (- 14))
    (<= (select B (+ 14 j)) 0))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 13 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 13))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (>= (+ j (* (- 1) M)) (- 13))
    (<= (select B (+ 13 j)) 0))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (select B (+ 12 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 12))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (>= (+ j (* (- 1) M)) (- 12))
    (<= (select B (+ 12 j)) 0))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (select B (+ 11 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 11))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (<= (select B (+ 11 j)) 0)
    (>= (+ j (* (- 1) M)) (- 11)))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 26 L2 (or (>= (+ j (* (- 1) M)) (- 10))
    (<= (select B (+ 10 j)) 0))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 27 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 28 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 7)))
      (a!2 (not (<= (select B (+ 7 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 29 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 30 L2 (or (<= (select B (+ 6 j)) 0) (>= (+ j (* (- 1) M)) (- 6)))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 5)))
      (a!2 (not (<= (select B (+ 5 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 31 L2 (or (>= (+ j (* (- 1) M)) (- 5)) (<= (select B (+ 5 j)) 0))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 4)))
      (a!2 (not (<= (select B (+ 4 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 32 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 33 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 33 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 34 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 34 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 35 depth: 0
(let ((a!1 (not (<= (select B (+ 1 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 1))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 35 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 36 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and (not (<= (select B j) 0)) a!1))

add-lemma: 36 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 37 depth: 0
true

add-lemma: 37 Error false

expand-node: query level: 38 depth: 0
true

add-lemma: 38 query!0 false


* LEVEL 39
expand-node: query level: 39 depth: 0
true

expand-node: query level: 38 depth: 0
true

expand-node: query level: 37 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and a!1 (not (<= (select B j) 0))))

expand-node: query level: 36 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 1)))
      (a!2 (not (<= (select B (+ 1 j)) 0))))
  (and (<= (select B j) 0) a!1 a!2))

expand-node: query level: 35 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

expand-node: query level: 34 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

expand-node: query level: 33 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 11)))
      (a!2 (not (<= (select B (+ 11 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 13)))
      (a!2 (not (<= (select B (+ 13 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 14 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 14))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 15)))
      (a!2 (not (<= (select B (+ 15 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 16)))
      (a!2 (not (<= (select B (+ 16 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       a!2))

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 17)))
      (a!2 (not (<= (select B (+ 17 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       (<= (select B (+ 16 j)) 0)
       a!1
       a!2))

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 18 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 18))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       (<= (select B (+ 16 j)) 0)
       (<= (select B (+ 17 j)) 0)
       a!1
       a!2))

expand-node: query level: 18 depth: 0
(and (<= (select A 0) 0)
     (<= (select A 1) 0)
     (<= (select A 2) 0)
     (<= (select A 3) 0)
     (<= (select A 4) 0)
     (<= (select A 5) 0)
     (<= (select A 6) 0)
     (<= (select A 7) 0)
     (<= (select A 8) 0)
     (<= (select A 9) 0)
     (<= (select A 10) 0)
     (<= (select A 11) 0)
     (<= (select A 12) 0)
     (<= (select A 13) 0)
     (<= (select A 14) 0)
     (<= (select A 15) 0)
     (<= (select A 16) 0)
     (<= (select A 17) 0)
     (not (<= (select A 18) 0))
     (not (<= N 18))
     (<= (+ N (* (- 1) i)) 0))

add-lemma: 18 L1 (<= i 18)

expand-node: query level: 19 depth: 0
(let ((a!1 (not (<= (select B (+ 18 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 18))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       (<= (select B (+ 16 j)) 0)
       (<= (select B (+ 17 j)) 0)
       a!1
       a!2))

add-lemma: 19 L2 (<= (+ M (* (- 1) j)) 18)

expand-node: query level: 20 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 17)))
      (a!2 (not (<= (select B (+ 17 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       (<= (select B (+ 16 j)) 0)
       a!1
       a!2))

add-lemma: 20 L2 (or (>= (+ j (* (- 1) M)) (- 17))
    (<= (select B (+ 17 j)) 0))

expand-node: query level: 21 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 16)))
      (a!2 (not (<= (select B (+ 16 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       (<= (select B (+ 15 j)) 0)
       a!1
       a!2))

add-lemma: 21 L2 (or (>= (+ j (* (- 1) M)) (- 16))
    (<= (select B (+ 16 j)) 0))

expand-node: query level: 22 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 15)))
      (a!2 (not (<= (select B (+ 15 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       (<= (select B (+ 14 j)) 0)
       a!1
       a!2))

add-lemma: 22 L2 (or (>= (+ j (* (- 1) M)) (- 15))
    (<= (select B (+ 15 j)) 0))

expand-node: query level: 23 depth: 0
(let ((a!1 (not (<= (select B (+ 14 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 14))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       (<= (select B (+ 13 j)) 0)
       a!1
       a!2))

add-lemma: 23 L2 (or (<= (select B (+ 14 j)) 0)
    (>= (+ j (* (- 1) M)) (- 14)))

expand-node: query level: 24 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 13)))
      (a!2 (not (<= (select B (+ 13 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       (<= (select B (+ 12 j)) 0)
       a!1
       a!2))

add-lemma: 24 L2 (or (<= (select B (+ 13 j)) 0)
    (>= (+ j (* (- 1) M)) (- 13)))

expand-node: query level: 25 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 12)))
      (a!2 (not (<= (select B (+ 12 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       (<= (select B (+ 11 j)) 0)
       a!1
       a!2))

add-lemma: 25 L2 (or (>= (+ j (* (- 1) M)) (- 12))
    (<= (select B (+ 12 j)) 0))

expand-node: query level: 26 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 11)))
      (a!2 (not (<= (select B (+ 11 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       (<= (select B (+ 10 j)) 0)
       a!1
       a!2))

add-lemma: 26 L2 (or (<= (select B (+ 11 j)) 0)
    (>= (+ j (* (- 1) M)) (- 11)))

expand-node: query level: 27 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 10)))
      (a!2 (not (<= (select B (+ 10 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       (<= (select B (+ 9 j)) 0)
       a!1
       a!2))

add-lemma: 27 L2 (or (<= (select B (+ 10 j)) 0)
    (>= (+ j (* (- 1) M)) (- 10)))

expand-node: query level: 28 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 9)))
      (a!2 (not (<= (select B (+ 9 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       (<= (select B (+ 8 j)) 0)
       a!1
       a!2))

add-lemma: 28 L2 (or (<= (select B (+ 9 j)) 0) (>= (+ j (* (- 1) M)) (- 9)))

expand-node: query level: 29 depth: 0
(let ((a!1 (not (<= (select B (+ 8 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 8))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       (<= (select B (+ 7 j)) 0)
       a!1
       a!2))

add-lemma: 29 L2 (or (<= (select B (+ 8 j)) 0) (>= (+ j (* (- 1) M)) (- 8)))

expand-node: query level: 30 depth: 0
(let ((a!1 (not (<= (select B (+ 7 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 7))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       (<= (select B (+ 6 j)) 0)
       a!1
       a!2))

add-lemma: 30 L2 (or (<= (select B (+ 7 j)) 0) (>= (+ j (* (- 1) M)) (- 7)))

expand-node: query level: 31 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 6)))
      (a!2 (not (<= (select B (+ 6 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       (<= (select B (+ 5 j)) 0)
       a!1
       a!2))

add-lemma: 31 L2 (or (>= (+ j (* (- 1) M)) (- 6)) (<= (select B (+ 6 j)) 0))

expand-node: query level: 32 depth: 0
(let ((a!1 (not (<= (select B (+ 5 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 5))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       (<= (select B (+ 4 j)) 0)
       a!1
       a!2))

add-lemma: 32 L2 (or (<= (select B (+ 5 j)) 0) (>= (+ j (* (- 1) M)) (- 5)))

expand-node: query level: 33 depth: 0
(let ((a!1 (not (<= (select B (+ 4 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 4))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       (<= (select B (+ 3 j)) 0)
       a!1
       a!2))

add-lemma: 33 L2 (or (<= (select B (+ 4 j)) 0) (>= (+ j (* (- 1) M)) (- 4)))

expand-node: query level: 34 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 3)))
      (a!2 (not (<= (select B (+ 3 j)) 0))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       (<= (select B (+ 2 j)) 0)
       a!1
       a!2))

add-lemma: 34 L2 (or (<= (select B (+ 3 j)) 0) (>= (+ j (* (- 1) M)) (- 3)))

expand-node: query level: 35 depth: 0
(let ((a!1 (not (<= (select B (+ 2 j)) 0)))
      (a!2 (not (<= (+ M (* (- 1) j)) 2))))
  (and (<= (select B j) 0)
       (<= (select B (+ 1 j)) 0)
       a!1
       a!2))

add-lemma: 35 L2 (or (<= (select B (+ 2 j)) 0) (>= (+ j (* (- 1) M)) (- 2)))

expand-node: query level: 36 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 1)))
      (a!2 (not (<= (select B (+ 1 j)) 0))))
  (and (<= (select B j) 0) a!1 a!2))

add-lemma: 36 L2 (or (<= (select B (+ 1 j)) 0) (>= (+ j (* (- 1) M)) (- 1)))

expand-node: query level: 37 depth: 0
(let ((a!1 (not (<= (+ M (* (- 1) j)) 0))))
  (and a!1 (not (<= (select B j) 0))))

add-lemma: 37 L2 (or (<= (select B j) 0) (>= (+ j (* (- 1) M)) 0))

expand-node: query level: 38 depth: 0
true

add-lemma: 38 Error false

expand-node: query level: 39 depth: 0
true

add-lemma: 39 query!0 false

